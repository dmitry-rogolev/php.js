/**
 * Проверяет, является ли значение числом с плавающей точкой.
 *
 * ### Параметры
 *
 * - `value` (any)
 *
 *      Значение для проверки.
 *
 * ### Описание
 *
 * Функция `is_float` проверяет, является ли переданное значение числом с дробной частью, которое отличается от целого числа.
 *
 * Она работает следующим образом:
 *
 * 1. Проверяет, что значение имеет тип `number`.
 * 2. Исключает значения `NaN`, которые также относятся к типу `number`, но не считаются числовыми значениями.
 * 3. Проверяет, что у числа есть дробная часть, проверяя остаток от деления на `1` (`value % 1 !== 0`).
 *
 * Значения, которые не являются числами или числа без дробной части, не считаются числами с плавающей точкой.
 *
 * ### Возвращаемое значение
 *
 * Возвращает `true`, если значение является числом с плавающей точкой, иначе `false`.
 *
 * ### Примеры использования
 *
 * #### Числа с плавающей точкой
 *
 * ```js
 * is_float(3.14);    // true
 * is_float(-0.5);    // true
 * is_float(0.1 + 0.2); // true
 * ```
 *
 * #### Целые числа
 *
 * ```js
 * is_float(0);       // false
 * is_float(42);      // false
 * is_float(-100);    // false
 * ```
 *
 * #### Нечисловые значения
 *
 * ```js
 * is_float('3.14');  // false
 * is_float(NaN);     // false
 * is_float(null);    // false
 * is_float(undefined); // false
 * is_float(true);    // false
 * is_float({});      // false
 * is_float([]);      // false
 * ```
 *
 * #### Специальные значения
 *
 * ```js
 * is_float(Infinity);   // false
 * is_float(-Infinity);  // false
 * ```
 *
 * @param {any} value Значение для проверки.
 * @returns {boolean} Возвращает `true`, если значение является числом с плавающей точкой, иначе `false`.
 */
export default function is_float(value) {
    return typeof value === 'number' && Number.isFinite(value) && value % 1 !== 0;
}
