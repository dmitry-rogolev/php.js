import multisort from './multisort.mjs';

/**
 * Сортирует массив в порядке возрастания, сохраняя ассоциацию индексов
 *
 * Сортирует массив `(array)` в порядке возрастания так, чтобы ключи массива сохраняли
 * корреляцию со значениями, с которыми они связаны.
 *
 * Функцией пользуются для сортировки ассоциативных массивов, для которых важен текущий порядок элементов.
 *
 * > **Замечание:**
 * >
 * > Функция сохраняет первоначальный порядок элементов, если при сравнении значения двух элементов равны.
 *
 * @param {Array|Object} array Входной массив.
 * @param {Number} flags Необязательный второй параметр `flags` изменяет поведение сортировки
 * и может принимать следующие значения:
 *
 * Флаги типов сортировки:
 *
 * - `SORT_REGULAR` — обычное сравнение элементов
 * - `SORT_NUMERIC` — числовое сравнение элементов
 * - `SORT_STRING` — строковое сравнение элементов
 * - `SORT_NATURAL` — сравнение элементов как строки,
 * используя "естественный порядок", например `natsort()`
 * - `SORT_FLAG_CASE` — можно объединять (побитовое ИЛИ) с `SORT_STRING`
 * или `SORT_NATURAL` для сортировки строк без учёта регистра
 *
 * @returns {true} Функция всегда возвращает `true`.
 * @throws {TypePHPJSError|ValuePHPJSError}
 */
export default function asort(array, flags) {
    return multisort(array, flags);
}
